// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotDefteriApi.Data;

#nullable disable

namespace NotDefteriApi.Data.Migrations
{
    [DbContext(typeof(UygulamaDbContext))]
    partial class UygulamaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NotDefteriApi.Data.Not", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DegistirmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Baslik = "Alınacaklar",
                            DegistirmeZamani = new DateTime(2023, 2, 1, 14, 41, 46, 364, DateTimeKind.Local).AddTicks(513),
                            Icerik = "1. Bot\n2. Kot",
                            OlusturmaZamani = new DateTime(2023, 2, 1, 14, 41, 46, 364, DateTimeKind.Local).AddTicks(505)
                        },
                        new
                        {
                            Id = 2,
                            Baslik = "Görevler",
                            DegistirmeZamani = new DateTime(2023, 2, 1, 14, 41, 46, 364, DateTimeKind.Local).AddTicks(516),
                            Icerik = "1. Ye\n2. Dua et\n3. Sev",
                            OlusturmaZamani = new DateTime(2023, 2, 1, 14, 41, 46, 364, DateTimeKind.Local).AddTicks(516)
                        },
                        new
                        {
                            Id = 3,
                            Baslik = "Gez & Gör",
                            DegistirmeZamani = new DateTime(2023, 2, 1, 14, 41, 46, 364, DateTimeKind.Local).AddTicks(518),
                            Icerik = "1. Muş\n2. Van\n3. Of",
                            OlusturmaZamani = new DateTime(2023, 2, 1, 14, 41, 46, 364, DateTimeKind.Local).AddTicks(518)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
